const express = require('express');
const mysql = require('mysql');
const bodyParser = require('body-parser');

const app = express(); 
app.use(bodyParser.urlencoded({extended: false}));
app.use(bodyParser.json());
app.use(express.static('public'));

const connection = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: '',
    database: 'pertemuan6'
});

connection.connect((err) => {
    if (err) {
        console.error("Koneksi ke MySQL gagal:", err.stack);
        return;
    }
    console.log("Berhasil terkoneksi ke MySQL: " + connection.threadId);
});

app.set('view engine', 'ejs');

// Routing (Read)
app.get('/', (req, res) => {
    const query = 'SELECT * FROM user';
    connection.query(query, (err, result) => {
        if (err) {
            console.error(err);
            res.status(500).send({ message: 'Error fetching data' });
        } else {
            res.render('index', { user: result });
        }
    });
});

// Create Insert
app.post('/add', (req, res) => {
    const { name, phone, author, books, books_number, date_time } = req.body;
    if (!name|| !books|| !date_time) {
        res.status(400).send({ message: 'Data tidak valid' });
        return;
    }
    const query = 'INSERT INTO user (name, phone, author, books, books_number, date_time) VALUES (?, ?, ?, ?, ?, ?)';
    connection.query(query, [name, phone, author, books, books_number, date_time], (err, result) => {
        if (err) {
            console.error(err);
            res.status(500).send({ message: 'Error adding data' });
        } else {
            res.redirect('/');
        }
    });
});

// Update
app.get('/edit/:id', (req, res) => {
    const query = 'SELECT * FROM user WHERE id = ?';
    connection.query(query, [req.params.id], (err, result) => {
        if (err) {
            console.error(err);
            res.status(500).send({ message: 'Error fetching data' });
        } else if (result.length === 0) {
            res.status(404).send({ message: 'Data tidak ditemukan' });
        } else {
            res.render('edit', { user: result[0] });
        }
    });
});

app.post('/update/:id', (req, res) => {
    const { name, phone, author, books, books_number, date_time } = req.body;
    const query = 'UPDATE user SET name = ?, phone = ?, author = ?, books = ?, books_number = ?, date_time = ? WHERE id = ?';
    connection.query(query, [name, phone, author, books, books_number, date_time, req.params.id], (err, result) => {
        if (err) {
            console.error(err);
            res.status(500).send({ message: 'Error updating data' });
        } else {
            res.redirect('/');
        }
    });
});


// Delete
app.get('/delete/:id', (req, res) => {
    const query = 'DELETE FROM user WHERE id = ?';
    connection.query(query, [req.params.id], (err, result) => {
        if (err) {
            console.error(err);
            res.status(500).send({ message: 'Error deleting data' });
        } else {
            res.redirect('/');
        }
    });
});

app.listen(3002, () => {
    console.log("Server berjalan di port 3002");
});
